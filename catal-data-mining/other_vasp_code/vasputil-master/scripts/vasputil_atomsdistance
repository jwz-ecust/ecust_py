#!/usr/bin/python
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
# Copyright (c) 2008, 2010 Janne Blomqvist

# This source code file is subject to the terms of the MIT (Expat)
# License. See the file LICENSE for details.

"""Find distance between two atoms."""

import vasputil.supercell as s
import ase.io
from optparse import OptionParser

usage = """%prog [options] POSCAR atom1 atom2

Note that atom numbering starts from 0.  The optional projection vector or 
plane, if supplied, should be in cartesian coordinates."""
parser = OptionParser(usage)
parser.add_option("-p", "--projvec", dest="pvec", \
        help="Projection vector, e.g. '0 0 1'. Note that the vector must be \
enclosed in quotation marks")
parser.add_option("-s", "--plane", dest="plane", \
        help="Projection plane, e.g. 'xy'")
(options, args) = parser.parse_args()
c = ase.io.read(args[0], format="vasp")
atom1 = int(args[1])
atom2 = int(args[2])
if options.pvec:
    pvec = []
    [pvec.append(float(x)) for x in options.pvec.split()]
    print s.atoms_distance(c, atom1, atom2, pvec)
elif options.plane:
    print s.atoms_distance(c, atom1, atom2, options.plane)
else:
    print s.atoms_distance(c, atom1, atom2)
