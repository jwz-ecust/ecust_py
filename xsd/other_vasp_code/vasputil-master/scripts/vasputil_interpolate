#!/usr/bin/python
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
# Copyright (c) 2008, 2010 Janne Blomqvist

# This source code file is subject to the terms of the MIT (Expat)
# License. See the file LICENSE for details.

"""Interpolate two POSCAR files.

Create a number of evenly spaced interpolated images between start
and end images.

"""

import vasputil.supercell as s
import ase.io
from optparse import OptionParser

usage = """%prog [options] POSCAR.start POSCAR.end 

The result is N files called which are linearly interpolated
between POSCAR.start and POSCAR.end."""
parser = OptionParser(usage)
parser.add_option("-f", "--fraction", dest="frac", \
        help="Where on the interval [cell1,cell2] the output cell \
coordinates will be.  Default is 0.5")
parser.add_option("-i", "--images", dest="images", \
        help="Number of intermediate images.  If != 1, --fraction\
is ignored.  Default is 1.")
parser.add_option("-o", "--output", dest="ofile", \
        help="The stem of the names of the output file(s).  The output files \
will be named STEM.1, STEM.2 and so forth.  Default is the name of the \
POSCAR.start argument.")
(options, args) = parser.parse_args()

ps = args[0]
pe = args[1]
c1 = ase.io.read(ps, format='vasp')
c2 = ase.io.read(pe, format='vasp')
if options.frac:
    frac = float(options.frac)
else:
    frac = 0.5
if options.ofile:
    ofile = options.ofile
else:
    ofile = ps 
if options.images:
    images = int(options.images)
    cells = s.interpolate_cells(c1, c2, frac, images)
    for ii in range(len(cells)):
        ase.io.write(ofile + '.' + str(ii + 1), cells[ii], format="vasp", sort=False)
else:
    images = 1
    cell = s.interpolate_cells(c1, c2, frac)
    ase.io.write(ofile + ".1", cell, format='vasp', sort=False)
