#!/usr/bin/python
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
# Copyright (c) 2008, 2010, 2011 Janne Blomqvist

# This source code file is subject to the terms of the MIT (Expat)
# License. See the file LICENSE for details.

"""Find layers in z-coordinates, output distances between them."""

import ase.io
import numpy as np
from optparse import OptionParser

usage = "%prog [options] POSCAR"
parser= OptionParser(usage)
parser.add_option("-b", "--binsize", dest="dbin", help=\
                      "Size of histogram bin, default 0.1 Angstrom")
parser.add_option("-t", "--tol", dest="tol", help=\
        "Tolerance, bin should contain > tol*maxbin in order to be counted \
as a layer, where maxbin is the population in the largest bin. Default is 0.1.")
(options, args) = parser.parse_args()

if options.dbin:
    dbin = float(options.dbin)
else:
    dbin = 0.1
if options.tol:
    tol = float(options.tol)
else:
    tol = 0.1

c = ase.io.read(args[0], format='vasp')

zc = c.positions[:,2] # Atom Z coordinates
bins = int(np.ceil((zc.max() - zc.min())/dbin))
histdat, levels = np.histogram(zc, bins)
mask = histdat > tol * histdat.max()
plev = levels[mask] + dbin/2
alayer = histdat[mask]
layerdist = plev[1:] - plev[:-1]
print "Z layer    Dprev  Atoms   %relax 1->2"
print "-------------------------------------"
ffmt = "%7.3f"
ifmt = "%3i"
print ffmt % plev[0] + "             " + ifmt % alayer[0]
for ii in range(1, len(plev)):
    print ffmt % plev[ii] + "  " + ffmt % layerdist[ii-1] + "    " \
            + ifmt % alayer[ii] + "     " \
            + ffmt % ((layerdist[ii-1] - layerdist[0]) / layerdist[0] * 100) + " %"
print "-------------------------------------"
print "Explanation of columns:"
print "Z layer: The z coordinate of the layer mid-point, zero is the atom " \
        + "with the lowest z coordinate."
print "Dprev: Distance between this layer and the previous layer."
print "Atoms: Number of atoms in the layer."
print "%relax 1->2: Relaxation in percent compared to the distance between " \
        + "the first and second layers."
# Finally, make a picture:
try:
    import matplotlib.pyplot as plt
except:
    print 'ERROR: Could not import matplotlib; No picture for you, bye!'
    import sys
    sys.exit(1)
plt.hist(zc,bins)
xst = "Bin number (bin size " + str(dbin) + " A)"
plt.xlabel(xst)
plt.ylabel("Atoms in bin")
plt.show()

